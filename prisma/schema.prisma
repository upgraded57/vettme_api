// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// All amount fields are integers in kobo i.e NGN100 === 100 * 100 kobo

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id              String  @id @default(uuid())
  email           String  @unique
  name            String?
  phone_number    String @unique
  isActive        Boolean @default(false)
  password        String 
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())
  balance         Int @default(0)
  avatar          String?
  verifications   Verification[]
  transactions    Transaction[]
  otps            otp[]
}

model Verification {
  id              String @id @default(uuid())
  user            User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId          String
  title           String
  personnel_name  String
  verified_with   String
  cost            Int
  info            Json
  status          String
  createdAt       DateTime @default(now())
}

model Transaction {
  id            String @id @default(uuid())
  user          User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId        String
  type          String
  amount        Int
  status        String 
  createdAt     DateTime @default(now())
}

model otp {
  id          String @id @default(uuid())
  user        User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      String
  otp         Int
  used        Boolean @default(false)
  createdAt   DateTime @default(now())
}